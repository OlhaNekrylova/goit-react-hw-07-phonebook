{"version":3,"file":"static/js/198.a6501918.chunk.js","mappings":"+MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,ECCnC,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,SCgEhI,EA1DoB,WAChB,IAAMC,GAAcC,EAAAA,EAAAA,IAAYJ,GAE1BK,GAAWC,EAAAA,EAAAA,MAsBjB,OACQ,kBAAMC,UAAWC,EAAaC,SArBb,SAAAC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAITC,EAAa,CAAEC,KAHRH,EAAKI,SAASD,KAAKE,MAGLC,OAFZN,EAAKI,SAASE,OAAOD,SAIXd,EAAYgB,MAAK,SAAAC,GAAO,OAC7CA,EAAQL,KAAKM,gBAAkBP,EAAWC,KAAKM,aADF,IAK7CC,MAAM,GAAD,OAAIR,EAAWC,KAAf,8BAELV,GAASkB,EAAAA,EAAAA,IAAgBT,IACzBF,EAAKY,QAEZ,EAGO,WACI,mBAAOjB,UAAWC,EAAlB,kBAEI,kBACID,UAAWC,EACXiB,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIhB,mBAAOrB,UAAWC,EAAlB,oBAEI,kBACID,UAAWC,EACXiB,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIhB,mBAAQrB,UAAWC,EAAgBiB,KAAK,SAAxC,2BAKX,EC/DQI,G,OAAY,SAAA5B,GAAK,OAAIA,EAAM6B,MAAV,GCC9B,EAAuB,0BAAvB,EAAwD,0BAAxD,EAAyF,0BAAzF,EAA4H,4BCUtHC,EAAc,WAChB,ILV0CC,EKUpC7B,GAAcC,EAAAA,EAAAA,IAAYJ,GAC1B8B,GAAS1B,EAAAA,EAAAA,IAAYyB,GAErBxB,GAAWC,EAAAA,EAAAA,MAUX2B,EAAcH,GLvBsBE,EKuBqBF,EAAb3B,ELtBlC2B,QAAO,SAAAI,GAAO,OAC1BA,EAAQnB,KAAKM,cAAcc,SAASH,EAAWX,cADrB,KKsB2ClB,EAEzE,OACI,eAAII,UAAWC,EAAf,SACKyB,EAAYG,KAAI,gBAAGC,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACb,gBAEAX,UAAWC,EAFX,WAGA,eAAGD,UAAWC,EAAd,UAA4BO,EAA5B,KAAoCG,MACpC,mBACIX,UAAWC,EACXiB,KAAK,SACLa,QAAS,kBAhBG,SAACD,GACzBhC,GAASkC,EAAAA,EAAAA,IAAmBF,GAC/B,CAc8BG,CAAoBH,EAA1B,EAHb,sBAHKA,EAFQ,KAgB5B,EAEDN,EAAYU,aAAe,CACvBC,MAAO,IAGX,Q,SClDA,EAA8B,4BAA9B,EAAwE,4BC8BxE,EAvBe,WACX,IAAMZ,GAAS1B,EAAAA,EAAAA,IAAYyB,GAErBxB,GAAWC,EAAAA,EAAAA,MAMjB,OACI,mBAAOC,UAAWC,EAAlB,mCAEI,kBACID,UAAWC,EACXiB,KAAK,OACLR,MAAOa,EACPa,SAXS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBvC,GAASwC,EAAAA,EAAAA,GAAUD,EAAO3B,OAC7B,EAUWW,UAAQ,MAIvB,EC5BD,GAAgB,KAAO,0BCwBvB,EAnBmB,WAEf,OACI,4BACI,uCACA,iBAAKrB,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,UACI,SAAC,EAAD,OAEJ,iBAAKD,UAAWC,EAAAA,MAAhB,WACI,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,YAKnB,ECbD,EARiB,WACb,OACI,+BACI,SAAC,EAAD,KAGX,C","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-07-phonebook/./src/modules/ContactForm/ContactForm.module.css?32da","modules/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://goit-react-hw-07-phonebook/./src/modules/ContactList/ContactList.module.css?aa60","modules/ContactList/ContactList.jsx","webpack://goit-react-hw-07-phonebook/./src/modules/Filter/Filter.module.css?ca1f","modules/Filter/Filter.jsx","webpack://goit-react-hw-07-phonebook/./src/modules/MyContacts/MyContacts.module.css?c4c0","modules/MyContacts/MyContacts.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const getAllContacts = store => store.contacts;\n\nexport const getFilteredContacts = (contacts, filterName) => {\n    return contacts.filter(contact =>      \n        contact.name.toLowerCase().includes(filterName.toLowerCase()))\n}; \n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__nXUDe\",\"label\":\"ContactForm_label__0MtWF\",\"input\":\"ContactForm_input__++7Rw\",\"button\":\"ContactForm_button__aavNL\"};","import { useSelector, useDispatch } from \"react-redux\";\n// import { addContact } from \"../../redux/contacts/contacts-slice\";\nimport { fetchAddContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n    const allContacts = useSelector(getAllContacts);\n    \n    const dispatch = useDispatch();\n\n    const handleAddContact = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newContact = { name, number };\n\n        const isPresentContact = allContacts.find(element => \n            element.name.toLowerCase() === newContact.name.toLowerCase()\n        ) ? true: false;\n        \n        if (isPresentContact){\n            alert(`${newContact.name} is already in contacts.`)\n        } else {\n            dispatch(fetchAddContact(newContact));\n            form.reset();\n        }        \n    }\n\n    return (\n            <form className={styles.form} onSubmit={handleAddContact}>\n                <label className={styles.label}> \n                    Name\n                    <input\n                        className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                    \n                <label className={styles.label}>\n                    Number\n                    <input\n                        className={styles.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                    \n                <button className={styles.button}  type='submit'>\n                    Add contact\n                </button>\n            </form>\n        );\n    };\n\nexport default ContactForm;","export const getFilter = store => store.filter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__w6thP\",\"item\":\"ContactList_item__0aVR0\",\"info\":\"ContactList_info__KHl4K\",\"button\":\"ContactList_button__6lZ5J\"};","import { useSelector, useDispatch } from \"react-redux\";\n// import React, { useEffect } from 'react';\nimport React from 'react';\n// import { deleteContact } from \"../../redux/contacts/contacts-slice\";\n// import { fetchAllContacts, fetchDeleteContact } from \"../../redux/contacts/contacts-operations\";\nimport { fetchDeleteContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts, getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\nimport {getFilter} from \"../../redux/filter/filter-selectors\";\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n    const allContacts = useSelector(getAllContacts);\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    // useEffect(()=> {\n    //     dispatch(fetchAllContacts());\n    // }, [dispatch])\n\n    const handleDeleteContact = (id) => {\n        dispatch(fetchDeleteContact(id));\n    }\n\n    const contactList = filter ? getFilteredContacts (allContacts, filter) : allContacts;\n    \n    return (\n        <ul className={styles.list}>\n            {contactList.map(({ id, name, number }) => (\n                <li \n                key={id}\n                className={styles.item}>\n                <p className={styles.info}>{name}: {number}</p>\n                <button\n                    className={styles.button}\n                    type=\"button\"\n                    onClick={() => handleDeleteContact(id)}\n                >\n                Delete\n                </button>\n            </li>\n            ))}\n        </ul>\n    );\n};\n\nContactList.defaultProps = {\n    items: []\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__HwuTE\",\"filterInput\":\"Filter_filterInput__LOSid\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport React from 'react';\n\nimport {setFilter} from \"../../redux/filter/filter-slice\";\nimport {getFilter} from \"../../redux/filter/filter-selectors\";\n\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value))\n    };\n\n    return (\n        <label className={styles.filterLabel}>\n            Find contacts by name\n            <input\n                className={styles.filterInput}\n                type=\"text\"\n                value={filter}\n                onChange={handleFilter}\n                required\n            />\n        </label>\n    ); \n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyContacts_text__88sVP\"};","import ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nimport styles from \"./MyContacts.module.css\";\n\nconst MyContacts = () => {\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <div className={styles.wrapper}>\n                <div className={styles.block}>\n                    <ContactForm />\n                </div> \n                <div className={styles.block}>\n                    <h2>Contacts</h2>\n                    <Filter />\n                    <ContactList />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyContacts;","import MyContacts from \"../../modules/MyContacts/MyContacts\";\n\nconst HomePage = ()=> {\n    return (\n        <>\n            <MyContacts />\n        </>\n    )\n}\n\nexport default HomePage;"],"names":["getAllContacts","store","contacts","allContacts","useSelector","dispatch","useDispatch","className","styles","onSubmit","e","preventDefault","form","currentTarget","newContact","name","elements","value","number","find","element","toLowerCase","alert","fetchAddContact","reset","type","pattern","title","required","getFilter","filter","ContactList","filterName","contactList","contact","includes","map","id","onClick","fetchDeleteContact","handleDeleteContact","defaultProps","items","onChange","target","setFilter"],"sourceRoot":""}